---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRYUt2WElJeTJHekFydU5xMmpJREJZekFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURneU1qQTVNVGN6TWxvWApEVEkxTURneU1UQTVNVGN6TWxvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTXIxTnlmYWhjT1l2ck0rZFFQZHBCcCsKNEFVeEF4OFZWbUJqN3h4bjh1dUtVcFJvSGVYaWw5RTZJWWxXQTQ1a2YwU2I1Tk9mNXc3eEI2d2ovR09kYjAvVgplc21vdVNOMEpKbnlxa3dZOUwvUDdGNWwwYXpRdTNJTVlhemFPQ1p3cW9sMFVXS2VtM24wOXd2VWY0eUp6ZFRvCjJVRTBuVXo4UlNTeGh2U3FJbHNuaTdTNVRXYWNxY1dkenJML25jb1RSSmRTVTdNdlJJYmlrTVplcE9PYVlmYU4KTDlzTEVObTlHQ21vRUVBK2I3QWh6TVpxTFd5SEtsU2QzZG43T0lISHV2R3QwbkVHd2w1Zis0R1RZTXJoaDRzRApJMkdBaWhIcHEvSVlOcU12THlFN3dHMVpZdFFlUHczTjYwemNEREJVRkR3M1RxTTYxWG5LZnV3MVpYK3plWGNDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNJb1BIM1Z1ZEpxREpTZXdPVApHbUlFOHdvclBUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSaWxraXZqbTVpaC9IS2E3VEZ3ZnU3R1B1M0k3CmdGODRXM3FOYWdvMHFGY2ViMzFuenc5Q1dYRFdSUGRLWTNZNTB4SlZQUEcxTEFnSUYvTnBTN2I3UGlpN1BreWIKcm5iWEFYdDlZc1lsZWh2RWkvMjJmRW1mMjd0ZGpGSlZMZFV3M1RvbXNFSGN3L2diak5ycE5ZdkVxSW53MGl3awpjb0hwajVURXp0cGNleE5zT0R2WE40VjhVQlJpMEFNbUJYcmorTHhScmxpY2t6bGlUTUhBZGcxV1F6MFVEWEgyCi9VUS91RUJHS1Q1T3ZuaDkzNXFLdmQxd2ZSUVNkby9sZUlrOEhES2Vjc2Fod2x5R2tLVmdUdEhrdTJNTCtheHcKQWdSSHZkYnpITjd5UzdPR3JkUmxzTXpIMGNBSURoVWJRSlBYM0VtSG02RHBTYWpiYmIvSDZCYVBNdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeXZVM0o5cUZ3NWkrc3o1MUE5MmtHbjdnQlRFREh4VldZR1B2SEdmeTY0cFNsR2dkCjVlS1gwVG9oaVZZRGptUi9SSnZrMDUvbkR2RUhyQ1A4WTUxdlQ5VjZ5YWk1STNRa21mS3FUQmowdjgvc1htWFIKck5DN2NneGhyTm80Sm5DcWlYUlJZcDZiZWZUM0M5Ui9qSW5OMU9qWlFUU2RUUHhGSkxHRzlLb2lXeWVMdExsTgpacHlweFozT3N2K2R5aE5FbDFKVHN5OUVodUtReGw2azQ1cGg5bzB2MndzUTJiMFlLYWdRUUQ1dnNDSE14bW90CmJJY3FWSjNkMmZzNGdjZTY4YTNTY1FiQ1hsLzdnWk5neXVHSGl3TWpZWUNLRWVtcjhoZzJveTh2SVR2QWJWbGkKMUI0L0RjM3JUTndNTUZRVVBEZE9venJWZWNwKzdEVmxmN041ZHdJREFRQUJBb0lCQUZpcWJqRXNCMW9mSmRpNgp4WFl0NHg1c0pVUS9XRVRCRnA0L3FsdDNraW1Tb1djU1lWVm4rN2s5TXgrRGcwUTI1VjY4MkdnWHFHTGZxK0ZwClN6N2RyWjVyL2h1UmFXaHl1ZmJEaStCNDJwdmRvejdPTHA3WUJidmFhdVdQNUEzdkZLRytQanZlWE1BWDQ4RzQKVVF5OXV6MXppRTR6UlRFMzJLRWlLWHBEeFlTYVoxcENhUytEbHJZOU9WUmNsR3JVeUZZTFFYd3pNbEorYm5uWgp4blUzd1laaHB2MHhMdFJ3UzdiY0VxOVNhUTNOYkRCa0prUGlFR1hFejVXUXhIOG5TRHVOR01EbkNlSituTlRPCk8zYlB5d25DN2tzRFd2S2JyYmhRUkVOS2FRRUJjUTI3bG15Qno1MjQyYWpVTDA3ZTlBaGF0aWVYUkp2TUNac0EKNTBtNTkrRUNnWUVBOTJiZFBDblhxL21VeEE4Zkh2Ym9qOVRpTVpNb0ZqQVJFVE9IWGxpdjlocnlDQ0VKY1lwawozUGlPKy8yYTNVMkNOcE5XUlp2QXloYmpJbjVEUXdXTWwvTHJmK3lDSkYyam9PRWd6clM3RElTNHFJUDAvSi8xCmRhUlNFbXg3d25vQmN5Z0RobVE1QlFndkNZd05neUl2VCtMT1dhMzFnOWhRN3NrQ0tSdFUyQ2NDZ1lFQTBnTHUKNU5PS2FoK0RMT2c1dVNNQW5oelVjUkIwZmszeEdPeWViSFE5RDBUVGpjKzdkOTB5dXRRSnlOaHFMczJ1MVBGVQpOTFgrR3R1UndCN2pMQVR5UXQwWGg5N29kNXprWWEyQVdNeUJ5b0lldlFPYVNjbEZCN1hnMm1PTGNlcDlWYXlWCm50a2lFa3kzMTd1V0g0VVkyNk9FcTZkMWxTRGtjY1cwYXdQL1ZqRUNnWUVBeWpGR1ZCbzZTakhDMUcwcldRb2YKelJVRis5QXhyZGlBeWxjYnBnN0RXRlp6UWhPRi9VWkc0cFU5ZmxLb2szNzZFWkplcXFyOVoreEdtM1Vua1luaQplbmlzNFRLd3RmblZkZkVuOStlYkMwTVpDNWcweTVZTGJLYnI4R1M2ekprYndEcU9qdkl2NjUzaG0yTGIxRFZICkIzbnNmVHgvNzg0RmJ2SFdrelBrSm5jQ2dZRUFuVW5OR2x6RlFnNHY5S1pJOVR3ZDdrMnhYcXp3VXRpVlJoR1IKNWJCNU9zSlZuOVNCbDVoM3NpMjAxbFFmMHNZQnQwSzN5bkt6eWZIQkM1OFdqWlYyekZWQ2xtU0F2M1VtSjNJRwp1bnNRaWxkQ0psWlliQUx1VElRUDBBRFdJNDk0SjM2RzROM0hBdVdxbTB6SGR2djhUaVA5N1lJU01vcmNEY29CCkFsV1FHMEVDZ1lFQTNoVVd0aHFscFhNYjJjS1hURnVZSWdNbGM3bjdzeW16dnl3aTlJS21TRzE0cmRtd29xZHUKaUg1ZWFwVzVFSkUrL1ltcHdvMGpPbVplT1VMU0ZQNys4RDlwa1hBNFBHZ3hnQkRCMTZ0am5GVWU0Q3JHTE4ydQpWc2VGcmkwK05kWTBLTHo4WW5meEo1dDVRWTFrbXRFSkc4U0ZlVUszQTJGMFNiUmlLdXlROVNJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRYUt2WElJeTJHekFydU5xMmpJREJZekFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURneU1qQTVNVGN6TWxvWApEVEkxTURneU1UQTVNVGN6TWxvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTXIxTnlmYWhjT1l2ck0rZFFQZHBCcCsKNEFVeEF4OFZWbUJqN3h4bjh1dUtVcFJvSGVYaWw5RTZJWWxXQTQ1a2YwU2I1Tk9mNXc3eEI2d2ovR09kYjAvVgplc21vdVNOMEpKbnlxa3dZOUwvUDdGNWwwYXpRdTNJTVlhemFPQ1p3cW9sMFVXS2VtM24wOXd2VWY0eUp6ZFRvCjJVRTBuVXo4UlNTeGh2U3FJbHNuaTdTNVRXYWNxY1dkenJML25jb1RSSmRTVTdNdlJJYmlrTVplcE9PYVlmYU4KTDlzTEVObTlHQ21vRUVBK2I3QWh6TVpxTFd5SEtsU2QzZG43T0lISHV2R3QwbkVHd2w1Zis0R1RZTXJoaDRzRApJMkdBaWhIcHEvSVlOcU12THlFN3dHMVpZdFFlUHczTjYwemNEREJVRkR3M1RxTTYxWG5LZnV3MVpYK3plWGNDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNJb1BIM1Z1ZEpxREpTZXdPVApHbUlFOHdvclBUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSaWxraXZqbTVpaC9IS2E3VEZ3ZnU3R1B1M0k3CmdGODRXM3FOYWdvMHFGY2ViMzFuenc5Q1dYRFdSUGRLWTNZNTB4SlZQUEcxTEFnSUYvTnBTN2I3UGlpN1BreWIKcm5iWEFYdDlZc1lsZWh2RWkvMjJmRW1mMjd0ZGpGSlZMZFV3M1RvbXNFSGN3L2diak5ycE5ZdkVxSW53MGl3awpjb0hwajVURXp0cGNleE5zT0R2WE40VjhVQlJpMEFNbUJYcmorTHhScmxpY2t6bGlUTUhBZGcxV1F6MFVEWEgyCi9VUS91RUJHS1Q1T3ZuaDkzNXFLdmQxd2ZSUVNkby9sZUlrOEhES2Vjc2Fod2x5R2tLVmdUdEhrdTJNTCtheHcKQWdSSHZkYnpITjd5UzdPR3JkUmxzTXpIMGNBSURoVWJRSlBYM0VtSG02RHBTYWpiYmIvSDZCYVBNdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUt3WEtjM0hxV1BxQk04aVZiK0RJczR3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBNE1qSXdPVEUzTXpKYQpGdzB5TlRBNE1qRXdPVEUzTXpKYU1DTXhJVEFmQmdOVkJBTU1HQ291YUhWaVlteGxMWEpsYkdGNUxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMWGtUQjNMNE11Uk5BU2cKZHNZY3IyVTRGdVBxZDMzZWVRWjhFbGJCYVFGSVlkRVc4azZwcWY2VzU4ZGw5N3d5cUgxUExodEZxdnRmeFZnUgp3bFVxb29iNnc3QVRKbHVzNzJJQkcxc1FCSGdtdTg0VUN0ZVJXemRJNk5zY0VaU3hmZjF4bmc1blVXK2g1Q25ECnd3bnpJTW9jTjE1ZkZZSVJ6NGtVZjdPc3RJd0hnSCtOOG1FTGJXY1ZDY1pPd1FDL0tKeGZmaVpCeWxNSE56TjcKTktGbVk5UnRkaU5rMlNGVllIa0NORVNjdU5KSC9YT0pYRXBKRk5wUkJPRTR0b1ZqWEU1V2tpTlBqdXozbVBTcgpwSUpTUFE4a3ptV2RjZlc1YmVWZEc3MndoUjFpLzNUaXFqeWEvaEgrQTVtYU5YczdaL0prNFlXTVhUa3poZjVwCkNKQTFPaVVDQXdFQUFhT0JoakNCZ3pBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUIKQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVpS0R4OTFibgpTYWd5VW5zRGt4cGlCUE1LS3owd0l3WURWUjBSQkJ3d0dvSVlLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNXbGdWN3ppNElnWmFTbCtiQzdOUnVod3JPUUIrRitFU20KVmdjdDRTS2tEVExYNlYwZHQweXhad1FSU1JjYTYvMkJjdFhneldGeDdnVWlIOFpTMzZ6dDFNSmczQzRYUnNBbgpyRVJyK2NwbVBPSWtsYUF0ZmY1R1JsN1VWdFQvWUo5SkhPNzVhY0xXNll2bmpFVUVWQkRyZWllTE9JVlpGbTRlCkV0WHdMWEc3bllvV0xscDE1dzJnS1FMOFhvbGxOd0ZRUGdFMVkvRnB6UE9zc3dZTHRYekR3RlpjbEtLUkVMcVEKYUVLdXJ5bHcreVpseUo2dndVV2dTSUFTUkcxMytVUWNGeXlVUXVSa0dWTzR1aldMc3FlVUc5WW1oNHB6U1o5Wgpmc1ZIWVRldzZud3RubmE4MnRvbU9FMzlkckdic0w3dnlKLzk3cUFQTWU4ajk5NGdQRENpCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdGVSTUhjdmd5NUUwQktCMnhoeXZaVGdXNCtwM2ZkNTVCbndTVnNGcEFVaGgwUmJ5ClRxbXAvcGJueDJYM3ZES29mVTh1RzBXcSsxL0ZXQkhDVlNxaWh2ckRzQk1tVzZ6dllnRWJXeEFFZUNhN3poUUsKMTVGYk4wam8yeHdSbExGOS9YR2VEbWRSYjZIa0tjUERDZk1neWh3M1hsOFZnaEhQaVJSL3M2eTBqQWVBZjQzeQpZUXR0WnhVSnhrN0JBTDhvbkY5K0prSEtVd2MzTTNzMG9XWmoxRzEySTJUWklWVmdlUUkwUkp5NDBrZjljNGxjClNra1UybEVFNFRpMmhXTmNUbGFTSTArTzdQZVk5S3VrZ2xJOUR5VE9aWjF4OWJsdDVWMGJ2YkNGSFdML2RPS3EKUEpyK0VmNERtWm8xZXp0bjhtVGhoWXhkT1RPRi9ta0lrRFU2SlFJREFRQUJBb0lCQUVEamxSUDhLOUh6bHk4ZgpYOEFGYzcwVWFYWWRxMHRJRnJ6dGZrMWM2bXordVlheVBQYzdKOTRmVDhpZTQrWkwzRGY0QzJiSFQ5d2xxbTFrCnlJTkJsb0c0N0I3Z2RncTJneC9mYlRiclcrelJSS2FjRjlJWGxRY0FCN0pETFRKeXI1TysrTGdDdTlhclZvNWYKdkRETWY2SWF0dFgvN2RoZEtrQ3BBM1hCNHhjZzdBdC9jZFNReE5jOTFVQ1pFQzdyUUZGMFBMQ2NHcEhYMm1PWApZdkJQWWUvdklXNjRjNjlqd2RHdEZaYWcycXpGd2JzRHZmQ3NsUlJaK0w3VmVJTmRJd2NUdkQxV0cyU3JZNHI0CkZjN3JlVHdCL216a2Jwb0tMV2ozOC9HTTVDWlJkWEkyL3J4SXZMYlpxRG9EcFJWY2x1bmVmZ1hGSVlSYmtGSUgKZ0JLQms0RUNnWUVBMkZaaHppYW9VOTcvNXczZ2NKQS96dDA3eFd1Smt2SEJaL3RMbTZ4UFRBN280QzZhK2VMZApTZE43VnN6bjVaMGMzWUpyL1VUQkV2UkRQK2hublpCeTlHTzQvNzlVakp3SDZIRlFYa2Nvc2F0ZTJPb0NQSG8wCktaQUorWHlIN09FYlAyYTNmNW9qZWQvRFhVNFdobnM4VEFaMmx4Sm1rTUdTaytNRFZac0lWVjBDZ1lFQTF6MDgKMEdYN1NHVTcyUVovWXczSVh0SEtuTjFQdVJhenB4QU1JeG1YcU5haG0rUjVtNGlyVWF1MjREcmpSOU1ESEJSRQp2RGd0bHNJYkhhZUEwcHVkM1RTYXBSU2k3RXlSM3lIZHNsWHo0OTRjSUlFNWxxUzUzOTZwSkxEVnFvMCswV2NwClhFUUxQSXdJZDVEa1d4MlY4bC9DN283My9tRi9zZzZGeDdJd28ya0NnWUFaYWhSMVZsOUI4eG1XK0M5Y3FlV0YKRk1KWHorbEtoUElXbUJQcXh0Uk4rQlp0ZDZ3bkhQcW9HSnNOdUdhcHQ4cFRUMllHUzlSdXVKbEo0YkNDZHh5NgpEeGtGbW1HQlh6Y2luR1Uzbmg1dXVOWWNuMmtCMTgxVzhKL3JXakRScUNRK1QzL1JFcmVHTXI1TnNNVytxSzJOCnROaXJxTEs1NExPcWdlbTdYY29kMVFLQmdHb0FpcmJId3QyQW5kemdTbFJxTVVnaFlmdW5NdUFnd2hHQTRibFgKblUxVmh2blRwK0JsaXBvS1MySmJIaHY5WEFhMEpMWGRwUFllV21SY1hpRmE2b0JLcSs2cEh5UHBBZDQyTzR6YwpyK1NGT3F6M2Qza3RYeTFWNTA5ZWw1d0xPK2k5T2ExckJXMm9PWE5KTkcxN1FLSEJiNnMxVmdVOTF6bkYxVFRvCkdQUWhBb0dCQUt3dTgraW04WVMwS1RTMThxNER2WkdTV24vd01YSmxCUHNRclhZaERIOWVMTFRYWit0VmswcE8Ka3QvYi8xV0pMemlrUjVSL2UyL0xHZGwxVk1SRTU1NW9oVEIxZ0tITzNMWjFYRWlaUTdMY20wUXJxVGFFeHA0TQpPdHVTUktLN0VOOWhCcU93UGY1VWdSb2lZb3Z1YXEwMGJFbXFqSmVFRkNEUTRkYjQrc09WCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRYUt2WElJeTJHekFydU5xMmpJREJZekFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURneU1qQTVNVGN6TWxvWApEVEkxTURneU1UQTVNVGN6TWxvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTXIxTnlmYWhjT1l2ck0rZFFQZHBCcCsKNEFVeEF4OFZWbUJqN3h4bjh1dUtVcFJvSGVYaWw5RTZJWWxXQTQ1a2YwU2I1Tk9mNXc3eEI2d2ovR09kYjAvVgplc21vdVNOMEpKbnlxa3dZOUwvUDdGNWwwYXpRdTNJTVlhemFPQ1p3cW9sMFVXS2VtM24wOXd2VWY0eUp6ZFRvCjJVRTBuVXo4UlNTeGh2U3FJbHNuaTdTNVRXYWNxY1dkenJML25jb1RSSmRTVTdNdlJJYmlrTVplcE9PYVlmYU4KTDlzTEVObTlHQ21vRUVBK2I3QWh6TVpxTFd5SEtsU2QzZG43T0lISHV2R3QwbkVHd2w1Zis0R1RZTXJoaDRzRApJMkdBaWhIcHEvSVlOcU12THlFN3dHMVpZdFFlUHczTjYwemNEREJVRkR3M1RxTTYxWG5LZnV3MVpYK3plWGNDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNJb1BIM1Z1ZEpxREpTZXdPVApHbUlFOHdvclBUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSaWxraXZqbTVpaC9IS2E3VEZ3ZnU3R1B1M0k3CmdGODRXM3FOYWdvMHFGY2ViMzFuenc5Q1dYRFdSUGRLWTNZNTB4SlZQUEcxTEFnSUYvTnBTN2I3UGlpN1BreWIKcm5iWEFYdDlZc1lsZWh2RWkvMjJmRW1mMjd0ZGpGSlZMZFV3M1RvbXNFSGN3L2diak5ycE5ZdkVxSW53MGl3awpjb0hwajVURXp0cGNleE5zT0R2WE40VjhVQlJpMEFNbUJYcmorTHhScmxpY2t6bGlUTUhBZGcxV1F6MFVEWEgyCi9VUS91RUJHS1Q1T3ZuaDkzNXFLdmQxd2ZSUVNkby9sZUlrOEhES2Vjc2Fod2x5R2tLVmdUdEhrdTJNTCtheHcKQWdSSHZkYnpITjd5UzdPR3JkUmxzTXpIMGNBSURoVWJRSlBYM0VtSG02RHBTYWpiYmIvSDZCYVBNdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQUpCNjdIcUZ2TjA3TFRkenhtWkFUYlF3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBNE1qSXdPVEUzTXpKYQpGdzB5TlRBNE1qRXdPVEUzTXpKYU1Db3hLREFtQmdOVkJBTU1IeW91WkdWbVlYVnNkQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEUmQ0Z3cKeVNYNWtzT09wV25UVUM5NWJielo4NDdCRnREeTNGNlJaZ21NMjhOT0FNY1ZPTWZPVnhsV0hLRHlJWnZOcmozWgpRZ2RUOS9LQWtDbWJwdmtmamRSQzZCWm9JdE80NFZta0lXK01NU1hTenRqVVg5MHlRMzZJZ1JNRDhXVldFR0kwClkzQ0tyNHhSYng1QjdKL2xBdldCS1IrZWpmaDF0alF1UVBESzFyS2FaZGdLWjl0UGhuQlBpcE1WOVVybmlnTSsKZ1ltdlZzZkNHV1ZQVzltUktYRUJzekNPajQ2bklOdEY0YkdBV1daMnA0K0lRQVl6dkxGanA2dTZHWUlRK0c2cgpzb0I4ZGpDZ3YrNVFqaTkrZ1RGQ29qUWNna3NtZ2VhSXNkeGdWdlJ6UnlMbjRiSjFYUXhvTFRjSC8rUVNMdkIzCmtYbC9ZT2l0N09UOXhzSUJBZ01CQUFHamdZMHdnWW93RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVcKTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQQpGSWlnOGZkVzUwbW9NbEo3QTVNYVlnVHpDaXM5TUNvR0ExVWRFUVFqTUNHQ0h5b3VaR1ZtWVhWc2RDNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKVEdJcmRFWGlLTE5ITUkKQktjaEJIWWYzSWNmQ2ZRU3RaOHBNeEtseW9KYlI3MVgwRGJ5aWVXcDJuckNjQm1xelF0QmdJRXE4L296cUVndgo4RS9sZGtPT0UreHdJQ1ljRGU1ZGJ6Q3JnTHRJS1F2ZVFHS0hRcHVYcTZJMXlnNXpVVnZlNms0VVhFNUxmdTJwCnYxdzlVNW5sZ2taTkQ5Z1I4eFJOcHd3SkplS1gwaUEwUW5iTVV0WmxPWUtja3RyNzVkN1lCYkk1Z3NsbjNhNHEKMHc1cTVER0RSSThNZlVtcGV1KzlnTlFvalF2REdvdzQ3YVRIUnR5R2M3RWlsMzNUZ3NNZmY3RmdLaDJab1ZULwpOdzcya01ZWE4xUGVQVzFoZ2RpdlFsWFRZSGpsN2NOZGh6UWVSOTd4K1JkT2FyMVFIQ0pmZEh4azd4VW9lWnFrCmdwODZrZ2s9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMFhlSU1Na2wrWkxEanFWcDAxQXZlVzI4MmZPT3dSYlE4dHhla1dZSmpOdkRUZ0RICkZUakh6bGNaVmh5ZzhpR2J6YTQ5MlVJSFUvZnlnSkFwbTZiNUg0M1VRdWdXYUNMVHVPRlpwQ0Z2akRFbDBzN1kKMUYvZE1rTitpSUVUQS9GbFZoQmlOR053aXErTVVXOGVRZXlmNVFMMWdTa2ZubzM0ZGJZMExrRHd5dGF5bW1YWQpDbWZiVDRad1Q0cVRGZlZLNTRvRFBvR0pyMWJId2hsbFQxdlprU2x4QWJNd2pvK09weURiUmVHeGdGbG1kcWVQCmlFQUdNN3l4WTZlcnVobUNFUGh1cTdLQWZIWXdvTC91VUk0dmZvRXhRcUkwSElKTEpvSG1pTEhjWUZiMGMwY2kKNStHeWRWME1hQzAzQi8va0VpN3dkNUY1ZjJEb3JlemsvY2JDQVFJREFRQUJBb0lCQUJncy81OEIyRXd4MERoSwpoeWhJZlBJNjVDMFRtMHBWNDgvajkxWTR2S2x4UTkxZzRabGxjRW8wYTB3eENiSm9ocDc2bVZEVitocUs1NFpICkhVWkZ3ME1ORDQ2WlV0eTZDRTJ5VkxKSTJhTUltU0QzbHJjTVNXOWZzdDcyWnNkeHVReHgzNlBFUmx6N1hlcVkKTkpuUFFiVWczazBGL2d4Q3ZvWjNmUlpKa0lFWWlRb1B0bWxGQzUwOFpkNFFXU3NEOElydFZCN2YvZFI3UWpUVQplSVM4bVpsek03Vi8reDRhcHV3L2J0Yjc2VzVvcW1vWmdLSTYwaVZOR2RSZUtjcXpzMXdXaERDYTBNRjg0aFRjCnBQZEJYS0NwUjFIWWtTQzhHM2tnQ0VCQW03S0VRa0p2NjVmci80VkxSd3lSQ1J1WFhCeFBzRjRkbGhGaytsUy8KMXE0cDFmRUNnWUVBOG0wN1FtTE9qdHhRLzNFc0tOTHJJUE4vYXV1Tis4UzIzb0JFa1lhQlpmeWlRMUF3eGZWUwpVRjVacjVRemhGZzVQekp0NkJrMWZpM2xzTmlyUURXUTU5cCtsMVhWQTZsK0grN3lEcXFPQmFlSHQ5VHRvZ1VRClFZRlYrOUlCU0t0SzZ6OUh3L00wWnp0Y0RBcXZqWml3WlhiblJyQjlFek83WDhhcDNsckptOE1DZ1lFQTNUSGgKRHV1VHQ5endTd1BMSmxMWGFYdmx6ZTFIVkYxamNRblVZQ0Y4OWlhUzZzcjRsS0Z2K2E5UW5EOHhWLzQ1Q1B2TQovUUIwcDdKNDhab0RZdldvd0tyV2JpMG1hUXh6QU12WEJIbUVrVE04NUsxNDUxWHl4blM1RWRRSnFGQjJhcmd3CkxIY1BVNU9Iamo4cHpsOHZTTjloeEtnbHVNWjNnL2ltOUVyNXd1c0NnWUFnNi95VU0xN2h2OEd3THVwVVVQQmwKZFN2a2xVQ2U1RVFCUzJJRWNVTzVXZW1mUXBDZEVZZXdLbC83bkNDeTVGaEI0Tk5VSmJoQi9uR201b1c3SG9zagpNV1Rub0Z4aE51OU4zdUU0WktrTTA0ZDJ5NC9KNU80a056QTZGbmJlSzRUdEZaYmxZVzNJWnlORTcxNlAyQ0I4Clp2MVplRFpFR1U1azMxSEtSSUlFaVFLQmdRREluUWVBejdwUEJLeFBiT1pnSUx4TWFGbVpkajIrVDJEMFViVHoKWnd2OStDaEJtTXJ4aXFXVE1DVU5RT2NRNW5wMkltSGRpUDlFWlVMNTVQUnpXVml2UFlKenRMRmtqeXp5cU8yZgptbExZbWo3OUxEUStwQjRuVGcvWUVwYWJ1RFplUGlVNi90VEF1VW8xZ2lYNWpTekdqQXNSSUd2dDlOcktyOGRFClE0Zlk5d0tCZ0NlZXRjQWEyQlh3bG8rT2JUQWpVc3lXK1RDeG5vbVc1UXRoN2dlbUlrbTZ6RjZoRzVaY3ZCT0sKVzRta2FtQjczUjZVZkNMRTByMUY4RHVzVW9FNDhBREQ3ZVVFTk8yRENqZ3hlbys5cTZxYXRDSjRHMzlwcWUzbwo1MEcyc0FhS0pndEw5eUFTb3M2QXh1RGFmazB3WEh4YlZqdUNlaGFVeXpxSEV5QndVc1l1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: ""

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: vxlan
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement:  "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    peer-service: unix:///var/run/cilium/hubble.sock
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
data:
  
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.11.2@sha256:4332428fbb528bda32fffe124454458c9b716c86211266d1a03c4ddf695d7f60"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.10.20"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.11.2@sha256:4332428fbb528bda32fffe124454458c9b716c86211266d1a03c4ddf695d7f60"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.11.2@sha256:4332428fbb528bda32fffe124454458c9b716c86211266d1a03c4ddf695d7f60"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.10.20"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.11.2@sha256:4c8bea6818ee3e4932f99e9c1d7efa88b8c0f3cd516160caec878406531e45e7
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.10.20"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.11.2@sha256:f031f95f3c9ba8962094649c0cc913f90723d553203444c8fb9a591e38873c9d"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: hubble-sock-dir
            mountPath: /var/run/cilium
            readOnly: true
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 0
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: hubble-sock-dir
        hostPath:
          path: /var/run/cilium
          type: Directory
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.8.5@sha256:4eaca1ec1741043cfba6066a165b3bf251590cf4ac66371c4f63fbed2224ebb4"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.8.5@sha256:2bce50cf6c32719d072706f7ceccad654bfa907b2745a496da99610776fe31ed"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
      - name: proxy
        image: "docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        command: [envoy]
        args:
        - -c
        - /etc/envoy.yaml
        - -l
        - info
        volumeMounts:
        - name: hubble-ui-envoy-yaml
          mountPath: /etc/envoy.yaml
          subPath: envoy.yaml
      volumes:
      - name: hubble-ui-envoy-yaml
        configMap:
          name: hubble-ui-envoy
