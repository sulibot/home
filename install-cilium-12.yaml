---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1ZeXpRbXJ3ZVl6ejZpZmUyZEVxRlF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURneU16QXpORGMwTVZvWERUSTFNRGd5TWpBegpORGMwTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyN3JicERzZ2lUa21JZVZJR0JSOTlWL2dRZlFEZmQxODg0eTBscGIrQVZyS05USGMKSVo1Q3JUOVZubDJEdUViV3B3OHZ6WWFZMHFEem00dm93bGZWNFJOaHFQMlJLakpoUWNzMmdPNzFILzZPUGY2MQphVHJlMjBGOUdSMVA2UUtFZk11eVdmNk1zWnJkWVVIVjBjaWpkQk80NERrL2dNUFRQTmUxcW02T2ZFMExmOEs1CnJBVEF3VC9nb0hIb3dxRXhMSHZFUFk5UnVIeW5ncjVHZGNJMC85WUo5YkNUcjhsR2FJU3RmZlF1RWVnelM1K3EKZXhJemVxeklZWUlLSGR0VFdseFIreTRYQXdjcVMwSWUyc0FzVUk5TW80eHFpZ1c3dkp5VUFEYmpnQUV1ZnpJdQpHeCs1MWQzcS9hNTIyTGJEblBDbVBlSDdPWUY3SGkyV0F6WXBuUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRkFyUWVOQmRiMFJBRlRHRzl6VkdTYW9kenRHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQXNiVVdsTGZzb1ozb05BY1dPbHdreUJlSzZ6cnJDdkhCRW15VTMzcGgzRTlzWENRQ3pjb0RICkxoM3dwUm9JVFRCZC8xZU1HY29KY1ZlYXQza09MZjVZbjNWZEc5Vng2TjQ5WVBZVlJkTXBpdG40NjNDMTkzMkgKbW5MemFCRGZFTHpjR2ViUnkxRkJQdklHTVE4dk5yS2VBTTArc2QvLzgzdFgxaTlJSGx1cFNrR25YWkVCSk9rLwpkbWZvNmpOZWJrNm9ibUlmQVhxNUx1V3ovNEdJZnp3eWRlK3FjQXQwWHlYWGZjU0pEU3N4WEJtanA4VEI0NU9aCitWMm51SFVDWG1vaUZ5SFAwZS8veVIrcTkyRXFtRzJPRUhVemQ2WlhSL2doM3hiWVRCRWQvNkI3ZnRvSzNCRG4KeUoxeVJCZTQzMzYvV2tsRzJBS2UwNGh6TkZBS3VuRGcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcjdyYnBEc2dpVGttSWVWSUdCUjk5Vi9nUWZRRGZkMTg4NHkwbHBiK0FWcktOVEhjCklaNUNyVDlWbmwyRHVFYldwdzh2ellhWTBxRHptNHZvd2xmVjRSTmhxUDJSS2pKaFFjczJnTzcxSC82T1BmNjEKYVRyZTIwRjlHUjFQNlFLRWZNdXlXZjZNc1pyZFlVSFYwY2lqZEJPNDREay9nTVBUUE5lMXFtNk9mRTBMZjhLNQpyQVRBd1QvZ29ISG93cUV4TEh2RVBZOVJ1SHluZ3I1R2RjSTAvOVlKOWJDVHI4bEdhSVN0ZmZRdUVlZ3pTNStxCmV4SXplcXpJWVlJS0hkdFRXbHhSK3k0WEF3Y3FTMEllMnNBc1VJOU1vNHhxaWdXN3ZKeVVBRGJqZ0FFdWZ6SXUKR3grNTFkM3EvYTUyMkxiRG5QQ21QZUg3T1lGN0hpMldBellwblFJREFRQUJBb0lCQVFDV0t4UHU4Q2dKbTdDZQpYcFNSSDFIVUVhNU9MZnVkMzF3YnRDM09VaEdWanNRbFdRcElJRG5TV3NFTHA5WWI3MDBYVGI4SDN2RlJiUUUvCjl2dGN1RHFwTUNyUWduOCtrL2JRaHB0NDZyckdNSDNWTkloSitHamc3TUcrYUhJVktIV1hQMnFWeFJUdDRPMDEKWTFFWkNGL0ZuZVRxbDRGUXhBY0xnenBXL2tyOHBGK2VIcEFwYWliR2ZhS3R3SGFUZ0NYQmJTZGpML2xVUmtVVQpSWUZpT09uVTd3Z042YW9qdjBWaDBGdG1ORlRIcXNnTkpBMU9sbm00ZTQ0bFNzKzR5aGprSWl4TGx6VVBCR3BHCmhybnQvU0hlT3R4c3ZEMGM1N3FNVVRJVXFVUUpWdmIvT252d3BkbitQYjFNb2E2eGNGa2dwUW0yYlVLQ21oVzgKRnF5aUZPcUJBb0dCQU5ZbEVvUlZ4RGtteEVFajRvTml5UVJaNzdNdmtqSW5rdXhYVThlUlhISGlwMXljZGU1Uwo2S1UzWnVNL0g2RUxTdTdJcmJ3a2YyaS9CT2srVXMvYTByWUo3MjJmQmdwTm9WUzBqb0lpYTUyNFRsYis3cktlCitoYXhsbytFSzd1VkhUdlBJN0dsQ0tHYVA5MlQ1N1BCVjUxb3NmMzN5UlR3WjZLa0ZTYWdMMGsxQW9HQkFOSVQKcVdWb0g2ZEprcENJWURQUzVWRGFsRGUrTGlRMWpETS8vZy9Dd3hFM2IwN1p0SzBFZS9OV3VDMlNxbCtXenFNRwpJcHgzZ1M3QTVjVkhoNDRQcFduMkdzc0hMRHZhbVk0VlRGdXBMVU8wYUkwcTh0ZVpqRXZaL0dPU3dYd2ZwVC9OCkkrdFhoMTM4eXh0Mml5aHlIeCt3dHhGUjkvSmZSdmhSaFQ0SW85UEpBb0dBTk52bnl6U2tmL3I2dkoyUC95QjIKUUJXM0hrTGkwbkNFU3NSdmtMWm4zRkMzUVJ2NTNEOG80QWRoNVR3aW9ZejVEU0lLQ0lQMTB6UTdrUnRxTTVadgpKcklqSUtyOVFiUFIyK2ZKdVlPbmpzSDh6R3FYSHc0dzYwTWd5QUkzRFZHTWFzUUJxb3J6SzNpNHhRZ0tUSXV3CkJkSGZCYktSTnhMMGNlZ1F0SDBienZVQ2dZQUkrYTRURncvREpmR05HMGFBOEZHNzBwcmloczJSM25mTytMenkKRDNBbUhDZzFSamZoN0g4Zk5tVklEU3dhU1djcXIraHFwdkJ0L3UvU0xld3N0WjVybUlnc2hISHZYTGVTeW5Zbwp0R0dxc3RxRXJZRVNsUXpaY01iSHVrMXA4REF2T2FSL09ZNGZCZDNubm5qemtXeWkvZm5VVTV3MFRyM0pmaklqCkpGdGJnUUtCZ1FDTGVjV0F4RmRjeXNIUTJuYTkzakFrYkdtYTMvTkxQcDROUEpYSFczeHJid1h2MWJVQ2RTbVMKNWNFTzk3c1paK3NtbWFIdmF6UHNldjI0dk0zYy9JMjVyaWRzZTRSUVpsQWxEREF2ZENlWExpaUZGdjNVbXduVQpMekkxL0RtRWRyYjlTcmZSYVg5SThVYnF2SWNSR09mVGxabEEyM2puSUtBeklwc0JWT0tuSVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1ZeXpRbXJ3ZVl6ejZpZmUyZEVxRlF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURneU16QXpORGMwTVZvWERUSTFNRGd5TWpBegpORGMwTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyN3JicERzZ2lUa21JZVZJR0JSOTlWL2dRZlFEZmQxODg0eTBscGIrQVZyS05USGMKSVo1Q3JUOVZubDJEdUViV3B3OHZ6WWFZMHFEem00dm93bGZWNFJOaHFQMlJLakpoUWNzMmdPNzFILzZPUGY2MQphVHJlMjBGOUdSMVA2UUtFZk11eVdmNk1zWnJkWVVIVjBjaWpkQk80NERrL2dNUFRQTmUxcW02T2ZFMExmOEs1CnJBVEF3VC9nb0hIb3dxRXhMSHZFUFk5UnVIeW5ncjVHZGNJMC85WUo5YkNUcjhsR2FJU3RmZlF1RWVnelM1K3EKZXhJemVxeklZWUlLSGR0VFdseFIreTRYQXdjcVMwSWUyc0FzVUk5TW80eHFpZ1c3dkp5VUFEYmpnQUV1ZnpJdQpHeCs1MWQzcS9hNTIyTGJEblBDbVBlSDdPWUY3SGkyV0F6WXBuUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRkFyUWVOQmRiMFJBRlRHRzl6VkdTYW9kenRHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQXNiVVdsTGZzb1ozb05BY1dPbHdreUJlSzZ6cnJDdkhCRW15VTMzcGgzRTlzWENRQ3pjb0RICkxoM3dwUm9JVFRCZC8xZU1HY29KY1ZlYXQza09MZjVZbjNWZEc5Vng2TjQ5WVBZVlJkTXBpdG40NjNDMTkzMkgKbW5MemFCRGZFTHpjR2ViUnkxRkJQdklHTVE4dk5yS2VBTTArc2QvLzgzdFgxaTlJSGx1cFNrR25YWkVCSk9rLwpkbWZvNmpOZWJrNm9ibUlmQVhxNUx1V3ovNEdJZnp3eWRlK3FjQXQwWHlYWGZjU0pEU3N4WEJtanA4VEI0NU9aCitWMm51SFVDWG1vaUZ5SFAwZS8veVIrcTkyRXFtRzJPRUhVemQ2WlhSL2doM3hiWVRCRWQvNkI3ZnRvSzNCRG4KeUoxeVJCZTQzMzYvV2tsRzJBS2UwNGh6TkZBS3VuRGcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcjdyYnBEc2dpVGttSWVWSUdCUjk5Vi9nUWZRRGZkMTg4NHkwbHBiK0FWcktOVEhjCklaNUNyVDlWbmwyRHVFYldwdzh2ellhWTBxRHptNHZvd2xmVjRSTmhxUDJSS2pKaFFjczJnTzcxSC82T1BmNjEKYVRyZTIwRjlHUjFQNlFLRWZNdXlXZjZNc1pyZFlVSFYwY2lqZEJPNDREay9nTVBUUE5lMXFtNk9mRTBMZjhLNQpyQVRBd1QvZ29ISG93cUV4TEh2RVBZOVJ1SHluZ3I1R2RjSTAvOVlKOWJDVHI4bEdhSVN0ZmZRdUVlZ3pTNStxCmV4SXplcXpJWVlJS0hkdFRXbHhSK3k0WEF3Y3FTMEllMnNBc1VJOU1vNHhxaWdXN3ZKeVVBRGJqZ0FFdWZ6SXUKR3grNTFkM3EvYTUyMkxiRG5QQ21QZUg3T1lGN0hpMldBellwblFJREFRQUJBb0lCQVFDV0t4UHU4Q2dKbTdDZQpYcFNSSDFIVUVhNU9MZnVkMzF3YnRDM09VaEdWanNRbFdRcElJRG5TV3NFTHA5WWI3MDBYVGI4SDN2RlJiUUUvCjl2dGN1RHFwTUNyUWduOCtrL2JRaHB0NDZyckdNSDNWTkloSitHamc3TUcrYUhJVktIV1hQMnFWeFJUdDRPMDEKWTFFWkNGL0ZuZVRxbDRGUXhBY0xnenBXL2tyOHBGK2VIcEFwYWliR2ZhS3R3SGFUZ0NYQmJTZGpML2xVUmtVVQpSWUZpT09uVTd3Z042YW9qdjBWaDBGdG1ORlRIcXNnTkpBMU9sbm00ZTQ0bFNzKzR5aGprSWl4TGx6VVBCR3BHCmhybnQvU0hlT3R4c3ZEMGM1N3FNVVRJVXFVUUpWdmIvT252d3BkbitQYjFNb2E2eGNGa2dwUW0yYlVLQ21oVzgKRnF5aUZPcUJBb0dCQU5ZbEVvUlZ4RGtteEVFajRvTml5UVJaNzdNdmtqSW5rdXhYVThlUlhISGlwMXljZGU1Uwo2S1UzWnVNL0g2RUxTdTdJcmJ3a2YyaS9CT2srVXMvYTByWUo3MjJmQmdwTm9WUzBqb0lpYTUyNFRsYis3cktlCitoYXhsbytFSzd1VkhUdlBJN0dsQ0tHYVA5MlQ1N1BCVjUxb3NmMzN5UlR3WjZLa0ZTYWdMMGsxQW9HQkFOSVQKcVdWb0g2ZEprcENJWURQUzVWRGFsRGUrTGlRMWpETS8vZy9Dd3hFM2IwN1p0SzBFZS9OV3VDMlNxbCtXenFNRwpJcHgzZ1M3QTVjVkhoNDRQcFduMkdzc0hMRHZhbVk0VlRGdXBMVU8wYUkwcTh0ZVpqRXZaL0dPU3dYd2ZwVC9OCkkrdFhoMTM4eXh0Mml5aHlIeCt3dHhGUjkvSmZSdmhSaFQ0SW85UEpBb0dBTk52bnl6U2tmL3I2dkoyUC95QjIKUUJXM0hrTGkwbkNFU3NSdmtMWm4zRkMzUVJ2NTNEOG80QWRoNVR3aW9ZejVEU0lLQ0lQMTB6UTdrUnRxTTVadgpKcklqSUtyOVFiUFIyK2ZKdVlPbmpzSDh6R3FYSHc0dzYwTWd5QUkzRFZHTWFzUUJxb3J6SzNpNHhRZ0tUSXV3CkJkSGZCYktSTnhMMGNlZ1F0SDBienZVQ2dZQUkrYTRURncvREpmR05HMGFBOEZHNzBwcmloczJSM25mTytMenkKRDNBbUhDZzFSamZoN0g4Zk5tVklEU3dhU1djcXIraHFwdkJ0L3UvU0xld3N0WjVybUlnc2hISHZYTGVTeW5Zbwp0R0dxc3RxRXJZRVNsUXpaY01iSHVrMXA4REF2T2FSL09ZNGZCZDNubm5qemtXeWkvZm5VVTV3MFRyM0pmaklqCkpGdGJnUUtCZ1FDTGVjV0F4RmRjeXNIUTJuYTkzakFrYkdtYTMvTkxQcDROUEpYSFczeHJid1h2MWJVQ2RTbVMKNWNFTzk3c1paK3NtbWFIdmF6UHNldjI0dk0zYy9JMjVyaWRzZTRSUVpsQWxEREF2ZENlWExpaUZGdjNVbXduVQpMekkxL0RtRWRyYjlTcmZSYVg5SThVYnF2SWNSR09mVGxabEEyM2puSUtBeklwc0JWT0tuSVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1ZeXpRbXJ3ZVl6ejZpZmUyZEVxRlF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURneU16QXpORGMwTVZvWERUSTFNRGd5TWpBegpORGMwTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyN3JicERzZ2lUa21JZVZJR0JSOTlWL2dRZlFEZmQxODg0eTBscGIrQVZyS05USGMKSVo1Q3JUOVZubDJEdUViV3B3OHZ6WWFZMHFEem00dm93bGZWNFJOaHFQMlJLakpoUWNzMmdPNzFILzZPUGY2MQphVHJlMjBGOUdSMVA2UUtFZk11eVdmNk1zWnJkWVVIVjBjaWpkQk80NERrL2dNUFRQTmUxcW02T2ZFMExmOEs1CnJBVEF3VC9nb0hIb3dxRXhMSHZFUFk5UnVIeW5ncjVHZGNJMC85WUo5YkNUcjhsR2FJU3RmZlF1RWVnelM1K3EKZXhJemVxeklZWUlLSGR0VFdseFIreTRYQXdjcVMwSWUyc0FzVUk5TW80eHFpZ1c3dkp5VUFEYmpnQUV1ZnpJdQpHeCs1MWQzcS9hNTIyTGJEblBDbVBlSDdPWUY3SGkyV0F6WXBuUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRkFyUWVOQmRiMFJBRlRHRzl6VkdTYW9kenRHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQXNiVVdsTGZzb1ozb05BY1dPbHdreUJlSzZ6cnJDdkhCRW15VTMzcGgzRTlzWENRQ3pjb0RICkxoM3dwUm9JVFRCZC8xZU1HY29KY1ZlYXQza09MZjVZbjNWZEc5Vng2TjQ5WVBZVlJkTXBpdG40NjNDMTkzMkgKbW5MemFCRGZFTHpjR2ViUnkxRkJQdklHTVE4dk5yS2VBTTArc2QvLzgzdFgxaTlJSGx1cFNrR25YWkVCSk9rLwpkbWZvNmpOZWJrNm9ibUlmQVhxNUx1V3ovNEdJZnp3eWRlK3FjQXQwWHlYWGZjU0pEU3N4WEJtanA4VEI0NU9aCitWMm51SFVDWG1vaUZ5SFAwZS8veVIrcTkyRXFtRzJPRUhVemQ2WlhSL2doM3hiWVRCRWQvNkI3ZnRvSzNCRG4KeUoxeVJCZTQzMzYvV2tsRzJBS2UwNGh6TkZBS3VuRGcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRUkxaNHpXQWM3RUMyMHcyZkFyQkQvakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl3T0RJek1ETTBOelF4V2hjTk1qVXdPREl5TURNMApOelF4V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEc3REdmgyY3l5ZG9LTWkvc3B5dEsvRkRsMWhURzIKMFM2TTBmU2VXR3FvM0NzMSs2dnR0aUxmSVpYdGJjT3V3TFNhOGdiOSszQVVmdUxwUFg0bUdoZmY3bVB4YzJYWQpaZ0ZneWFlMWpsU2xZaXV2d2F4UHRWQzk5L0VQK3FFK3pkZG5hdXBNRVNYTU1ZL0M5QTVEckpxOFpjLzJIMjJVClNRZjE4MzdXY2twL0diSGdFZTF0UUdpdSttL0Vjc3hNUkUyUmRxR1Z5YVQzSHlOdVBnd0xLN3RXYUJIUnRORmkKN2ZBSlhqWTJ4ZHVNdFFISkR5bU02T1Excit1Sks2THYwbWRLcXY1Njl3WHZ5QVZLWk81Z040UGZ2cjFOU3JkMgpEaUVqNEdoSnBaWjdGMkVCMWprTmlYODdMRHh4VnZwQzAxSlkzZVI0dm52dDQxZlRZZk84ZnkwVkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZGQXJRZU5CZGIwUkFGVEdHOXpWR1NhbwpkenRHTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFhdWpaSUhUWC9lRHVtWjd5aTI1T3F3RzFJbmFPdSsySGNXdzdEWExCN21WS29YL2IKQnZXKy9IUkdMNGFtZkIzUHFiVE43Ull2UEV0UTdyT2F6aHdsUDNoUlBEUy93TDlzblU3dWkxQVVnNnliZ3AzSApUQVdMQSt2K2JoVUNVL1VtMmpzQUZwenZBQzFRTllOTSsrSExGc2NFVXhXdUpwYnVTemo1Qnc3V3dZMWlTMW5LCjRaeVlZR2lGOTVreWw1WkVCVTRnK0xuTTBJcCswbWZEaXVzMktqRWhGRllpNVFJbjd6VkJMRHVtWEtzTjB4T2QKNVZJa2lFdjdRaCtSMWI1ejNDS3RsMGNnUDI4dGlVNjhqcGhhanoxZ0F6NnVTcUZrRUxkaDQyNmhvTFNGZU9QbApjRDJIaUF4UVlDL25jKy9Pc25NMWN6Wkt0M0JqbllRc1lWbFd6QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBN0xRNzRkbk1zbmFDakl2N0tjclN2eFE1ZFlVeHR0RXVqTkgwbmxocXFOd3JOZnVyCjdiWWkzeUdWN1czRHJzQzBtdklHL2Z0d0ZIN2k2VDErSmhvWDMrNWo4WE5sMkdZQllNbW50WTVVcFdJcnI4R3MKVDdWUXZmZnhEL3FoUHMzWFoycnFUQkVsekRHUHd2UU9RNnlhdkdYUDloOXRsRWtIOWZOKzFuSktmeG14NEJIdApiVUJvcnZwdnhITE1URVJOa1hhaGxjbWs5eDhqYmo0TUN5dTdWbWdSMGJUUll1M3dDVjQyTnNYYmpMVUJ5UThwCmpPamtOYS9yaVN1aTc5Sm5TcXIrZXZjRjc4Z0ZTbVR1WURlRDM3NjlUVXEzZGc0aEkrQm9TYVdXZXhkaEFkWTUKRFlsL095dzhjVmI2UXROU1dOM2tlTDU3N2VOWDAySHp2SDh0RlFJREFRQUJBb0lCQUJpRVFuK09FNG1ZaE1VUgo2cDNWaUNhS2Jia2lacGZNNnNsakpiY1E2VnM4RXEyd3Q0b1RoMkVkRlc1V0pDS0Jpek5SUmpBZ1R1ZVFqT2dqCm1tRlA2cEVqRys3eVNPWTFDb2QvMjRNT2p1M2lVU3dQSDAzU05kNjNRNXlvRlBOd1ZwTTdtN0R0UmNEMGtUTmMKRys0ZWZwaHM0ekZXNS82bjRjOHp2VHR3OHc1ZTQrLy9wRjJhU0VWWXFIb0dOdk1JOTZmWWRidHJwZkpIVmRXbQpDS0FBYlQzT1BKNnBKUEVNek5KUGpjdU9OTDNhWTNIV2toTHdBMmZhVGJEV2dESlNyNGxxWHpXMWI5UDd6WXcrCmZMZVYyaWd0cDFMcnBjb3VpVnJlbUFQRnJhQ05pejVibTRiN3pjQnc0MjNUUlhzNTQyQ21XRkJmWk1Ia21vQk8KMXcweHlqRUNnWUVBKzdneE0xRzR6VzJVanhLS2JOSThyQ0s4clZtWi8vWXUxOGM3NXc4VVdVc2M2QWtBNTRNegpoK01yZ3FOeW9QSGw3VmxHeWJYN0F4R2I3Y2VZdEpiVzFnWG4xUm5zSktEMVlleVdadENpUzNtaFhMcXFEUWY3Cm1xQTNMSThZNWlqSDh6RkdOT3ZWY09UMnFNK0ZPRzRqb3JpU2MvYXdNaVd4d3lNUmdSS09Pa2NDZ1lFQThMcXMKMGI2bmhGYnZZMkowN3IzRVAzOVE1bHhxdWxveU52SytCZnVaWDJVNCtCNTQ4Y2xXQko1cU5qL0FiN1FJenVKYgpLTGlIWEdUaGpESDBDdFA0b1k2YjZuZy83RVJHNDZEdmg4alBpUWVKUWNiY3JkU2tIaEhyTXVQUjROQUExMnFnCjF6cnIyQ3U0T0xjamkrR3UvQU45OEhzZ3BsdXRrWHlGUldmOGI4TUNnWUJUdmh5SU1UamxCdjYwZG51YzVuaU8KMytPYlhFTFNsK2xQbWhYQXNoQ1lBRmcyamNCQ1JURGdsV0FGVHpFMGdDVjVTQWszMUJZVkdFZWkzSk5lQ1F5aQpHVWJlYTRoWFMwRTNlY2t6blZkUStyOEhKWWFyWFN1RWJxYk1hVExrWjA3V0JsK1AvYUY5dEg2bS9Kc2FnZkhUCkVjcVBUOU9nYTAvdlZueGRUM29Id3dLQmdRRGF2c2FMVVZPblRkZjUxMTJxRTRaZ3JMQTJvNFBZRWwzTzBJVWIKcXFTVHFzYzVyM2IzUHB5TFZlZnRvOENad0Y3QW42OTJNVGZQSFZ4V3FJMjV5U1FFcWpIRHZjRllVREthWllORApQNVpXVGlMTFFva0U3RlMxZmxMYXkybkxmemRFaC8vZmxBcjdRNzhDeW1maWxCRU5yNTZoQjBHRDZZcXV5UmZSCkdjeXBRUUtCZ0dnVll3d3MvVUozaVYzNTYvZVE5M0dDcndIYmkxMnpkYm5scDVna1BvcXFrZjZPanQwWVlvTnMKcGV6ajltMFdmV0grbDFFVFNJU1phRlJqK003N1Erc2xwY0NKTzlXRlEwdkoyNDZ1VmhQcWpaTG01WHQwZ1lwUApRTFdid2hlSlhFWHFVOHJrZHZUM25ud1kzcWozcHlxa0pHUTRPV1E0ajFPK1BBRXB4eEcrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1ZeXpRbXJ3ZVl6ejZpZmUyZEVxRlF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURneU16QXpORGMwTVZvWERUSTFNRGd5TWpBegpORGMwTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyN3JicERzZ2lUa21JZVZJR0JSOTlWL2dRZlFEZmQxODg0eTBscGIrQVZyS05USGMKSVo1Q3JUOVZubDJEdUViV3B3OHZ6WWFZMHFEem00dm93bGZWNFJOaHFQMlJLakpoUWNzMmdPNzFILzZPUGY2MQphVHJlMjBGOUdSMVA2UUtFZk11eVdmNk1zWnJkWVVIVjBjaWpkQk80NERrL2dNUFRQTmUxcW02T2ZFMExmOEs1CnJBVEF3VC9nb0hIb3dxRXhMSHZFUFk5UnVIeW5ncjVHZGNJMC85WUo5YkNUcjhsR2FJU3RmZlF1RWVnelM1K3EKZXhJemVxeklZWUlLSGR0VFdseFIreTRYQXdjcVMwSWUyc0FzVUk5TW80eHFpZ1c3dkp5VUFEYmpnQUV1ZnpJdQpHeCs1MWQzcS9hNTIyTGJEblBDbVBlSDdPWUY3SGkyV0F6WXBuUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRkFyUWVOQmRiMFJBRlRHRzl6VkdTYW9kenRHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQXNiVVdsTGZzb1ozb05BY1dPbHdreUJlSzZ6cnJDdkhCRW15VTMzcGgzRTlzWENRQ3pjb0RICkxoM3dwUm9JVFRCZC8xZU1HY29KY1ZlYXQza09MZjVZbjNWZEc5Vng2TjQ5WVBZVlJkTXBpdG40NjNDMTkzMkgKbW5MemFCRGZFTHpjR2ViUnkxRkJQdklHTVE4dk5yS2VBTTArc2QvLzgzdFgxaTlJSGx1cFNrR25YWkVCSk9rLwpkbWZvNmpOZWJrNm9ibUlmQVhxNUx1V3ovNEdJZnp3eWRlK3FjQXQwWHlYWGZjU0pEU3N4WEJtanA4VEI0NU9aCitWMm51SFVDWG1vaUZ5SFAwZS8veVIrcTkyRXFtRzJPRUhVemQ2WlhSL2doM3hiWVRCRWQvNkI3ZnRvSzNCRG4KeUoxeVJCZTQzMzYvV2tsRzJBS2UwNGh6TkZBS3VuRGcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQVBDcnRRT0hPd0JlbmNDazJYd20rVHN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURneU16QXpORGMwTVZvWERUSTFNRGd5TWpBegpORGMwTVZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9qREdxWVJvL3VNUklLNGkxdGoKSy9qN21WUWFZdDZMb2xJc3NzamFFckZKTXlwQzExNmtsSmF6VjFiYldSWk1RSnFiaytNSDJ2Z2tRQnUzZGxmUgpUWjZSbytMQzRIdndVbFQ0d0c1WU5yM2V4Tm8rMkJXeXVaMnFjRnljV3pNN083WEJ1NEJyQ3hRbW5SOU5RbGwwCjlrNzdMQWo0Y0VhL1FXa2ZGK29yWjFyRHFQZGkrVHVHdjI2Z1N0WjdHMVV2eWQ4Y2tVQjJ0dnhvWW1PbkZrODkKWVl1aWhoRTdjQzRRMFJSYk4wdXdpYWpjQkoyWFc0UFBTdCsrbDNBUFUwY0p2YXIxN1lFYVZJUXM0bWd6aHRYbApkOGpxWnJUQnF2bGwwM051T2xLa2hUZ2VvUit2VlVsVHZHTGMxdXZ0SzZGRDlCRDloSkhrdlVXeUt6cnN2UUhVCndCY0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVVDdEI0MEYxdlJFQQpWTVliM05VWkpxaDNPMFl3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUZVTDd2bi9jT3BTRm93UjZQQXhtVGFBSlZKR1EKV2hhSk9kVWIreW0zS2lkbXg2VXFyWjdzWjBuWEZvbEZyNkkzYjFmaEEvUTZoc1Y1ZWdGYjV4ZUtPaHN0RHZHZApVNkVjQTZyS3pPd2F1OVQyRWtZZ1QxajlPOVoxTGtlUzB3K3lpcVY3dXFYSk8rUHZMcWZ4Q1RpdmhDRHFlbDdHCnJwWHFNWmRoVmZBVmxaZ3MyaWd6dm1La3E3YjBVb2pWTWRiSWNySVhocDYwd25XNGxOeHdjeDg4YlYxQmVjdE4KMkVQUkpIZU1MbTE5MXRmSTFzVEJHaitnODJKanNMUU0zQU9Ta1RWNDBMTXNvS2lXb0RXbWR4QU90Z2NiTWdnQQpXc3NkSUMxcXh4YWJMV2V1Sm50R3hmZE1LSTRpQzd3YXA5a1ZPcms0L0FNRi92MGxuTWhZYW5IVWxRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNk1NYXBoR2orNHhFZ3JpTFcyTXIrUHVaVkJwaTNvdWlVaXl5eU5vU3NVa3pLa0xYClhxU1Vsck5YVnR0WkZreEFtcHVUNHdmYStDUkFHN2QyVjlGTm5wR2o0c0xnZS9CU1ZQakFibGcydmQ3RTJqN1kKRmJLNW5hcHdYSnhiTXpzN3RjRzdnR3NMRkNhZEgwMUNXWFQyVHZzc0NQaHdScjlCYVI4WDZpdG5Xc09vOTJMNQpPNGEvYnFCSzFuc2JWUy9KM3h5UlFIYTIvR2hpWTZjV1R6MWhpNktHRVR0d0xoRFJGRnMzUzdDSnFOd0VuWmRiCmc4OUszNzZYY0E5VFJ3bTlxdlh0Z1JwVWhDemlhRE9HMWVWM3lPcG10TUdxK1dYVGMyNDZVcVNGT0I2aEg2OVYKU1ZPOFl0elc2KzByb1VQMEVQMkVrZVM5UmJJck91eTlBZFRBRndJREFRQUJBb0lCQVFDNmhEMUNmamhOUm1WUAo2dG1nN2FNNjdVSThwcmc3Wk9FNXdCK3oyeXZIYk1UWFJLQ1ljb0d2RVI4WHRzVjRuTG5ZS25zakhoUlZhNWNECm5zdnlLd0pyNG9EVklSd0p0TllFeVNCS1M5M3g0Q1VXVGUyUjFabnZ3Ymd3UGdyR3p0eFdGVnhPMTNnVk9hd0cKZlQ2QnVMdjNKa1p2R2NXK3ExdWJCUk9Bemk4UUJ0cHhjT09MZFlINUljMzEzbk92bXY0RmtId0FpTTdubFFkdgpCTGg3djZpS09YSGRCQUQweSttZE5ocnhqa0czbG5DMlN0UWV0S2ZVL3lpM0FEaC9sYnpCOGxtL2VPZnV0WlloCjBNKzFQU3dpTklzZDYxVmRaOHViK1pybi93Q2hwZ1VQRnFkUjBwQWh2cnFhU0pWcFgzYThFSnZ6d0w0Y0tMRDcKTGdsQlJZNWhBb0dCQU8zVDFFT212d1RMenMwY0YwSTcwK0xVRkxpdnBVQkl2TkNPMWwxeFkrV2Z6MmE4RGc3SQpNMzl4bXRhZ0NnbXg2RmdNc3pvblZEMzB2bkZnYTlPSzZOQ1pXZ1FzR0RiRnFlbUdlZ0dZd3pWTkpxSU5DK3ZvCmJOYXNIdW1keHhZY0JRb3FyYkN2d1dpY21ZY2VDZ0Urc2dIWmRwSUtYcGhkZlhTd1dZODBNT0p6QW9HQkFQcU0KTVA1QVoxYmkvWElsdXFFMGxmWkoxL2YrS2VUQVUwT3BDaXNIcDRIVzg0ZHN4LzhadDZlb3VDLzJ6LzgwZUVpNgplLzZ2VTg1MGg5b2tRNHczRHNwY3lBVHUrajNYVTRJS0VxbGhMczlzaUdoRzl1QTY3YXhUMmZVUzRRVE1qU1ZlCisrRUxQWk5xeDdBQnFTTjVFVVhlZjZ5YTJBeTBZa2EzV1ZmaWxtN05Bb0dBQmdKc1FxbGIra3NNRnJLM0E3MXYKUlRRR3NnUCtNUG1saTcrUU94dzZZZnIveXFERjJpbkU0MXVEaGhqVktCbU92V3JVdkl0eDNYN3BzUU8ydGNtMAp5RkNYcmJOUGlWTEZVRmxOaSt6SVFmaUpHVjhyQmZNQmpRc2NYTnJYeFA5QVFWbUN1Z3cyM3VYV0cwdnZCTWtJCnhuTXdROUJ2UTNwWlNUR0xrY3JIMFhFQ2dZRUF2N2tqakl2d0NCYnU1cmhrVmhPTlpjZ2dFYzlXYzR1UXE4ZmcKMWdpbmI3M3k0UUNuRWxpMXB3Qis0WVUycVEyWHRkK3VIcmcvbzA2YzNwcTliY0I3K3ZLQXhQV3lYRHczMU55cwpaeHpNMjBFc0tNK1Uvd1ZZOW5PNzU4T29tU21HSU1ETWNldE9GVTZ5dThhcGpWR0puRE9rODRvU0piYXJOWDM4ClNqcEQ3MGtDZ1lBYWY0M0ozdlZuVmUrTzE2ZVptZkc1WnA1VXVYSi83VldKcTd5cHVPWE9kQjF1MVNWWjF5MC8KRWtkUWswWmg2MkVJa3hFa0QvNG5qcUNYWUtDeHJJWDZxSlk3TWo3ek04WjdXOEsxdGRzdFR2YzQxSVFWME9iRwppQjRidVZzdXlBdXlyNmN5ZkkxSitDR1JXWmhWaU9ER29TZXBDanBsRzRzM2FEZ2lORUVFSFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n\n        location / {\n            try_files $uri $uri/ /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.12.1@sha256:ea2db1ee21b88127b5c18a96ad155c25485d0815a667ef77c2b7c7f31cab601b"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.10.20"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            add:
              # Use to set socket permission
              - CHOWN
              # Used to terminate envoy child process
              - KILL
              # Used since cilium modifies routing tables, etc...
              - NET_ADMIN
              # Used since cilium creates raw sockets, etc...
              - NET_RAW
              # Used since cilium monitor uses mmap
              - IPC_LOCK
              # Used in iptables. Consider removing once we are iptables-free
              - SYS_MODULE
              # We need it for now but might not need it for >= 5.11 specially
              # for the 'SYS_RESOURCE'.
              # In >= 5.8 there's already BPF and PERMON capabilities
              - SYS_ADMIN
              # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
              - SYS_RESOURCE
              # Both PERFMON and BPF requires kernel 5.8, container runtime
              # cri-o >= v1.22.0 or containerd >= v1.5.0.
              # If available, SYS_ADMIN can be removed.
              #- PERFMON
              #- BPF
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.12.1@sha256:ea2db1ee21b88127b5c18a96ad155c25485d0815a667ef77c2b7c7f31cab601b"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            drop:
              - ALL
            add:
              # Only used for 'mount' cgroup
              - SYS_ADMIN
              # Used for nsenter
              - SYS_CHROOT
              - SYS_PTRACE
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.12.1@sha256:ea2db1ee21b88127b5c18a96ad155c25485d0815a667ef77c2b7c7f31cab601b"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            drop:
              - ALL
            add:
              # Required in order to access host's /etc/sysctl.d dir
              - SYS_ADMIN
              # Used for nsenter
              - SYS_CHROOT
              - SYS_PTRACE
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.12.1@sha256:ea2db1ee21b88127b5c18a96ad155c25485d0815a667ef77c2b7c7f31cab601b"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.12.1@sha256:ea2db1ee21b88127b5c18a96ad155c25485d0815a667ef77c2b7c7f31cab601b"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.10.20"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            # Most of the capabilities here are the same ones used in the
            # cilium-agent's container because this container can be used to
            # uninstall all Cilium resources, and therefore it is likely that
            # will need the same capabilities.
            add:
              # Used since cilium modifies routing tables, etc...
              - NET_ADMIN
              # Used in iptables. Consider removing once we are iptables-free
              - SYS_MODULE
              # We need it for now but might not need it for >= 5.11 specially
              # for the 'SYS_RESOURCE'.
              # In >= 5.8 there's already BPF and PERMON capabilities
              - SYS_ADMIN
              # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
              - SYS_RESOURCE
              # Both PERFMON and BPF requires kernel 5.8, container runtime
              # cri-o >= v1.22.0 or containerd >= v1.5.0.
              # If available, SYS_ADMIN can be removed.
              #- PERFMON
              #- BPF
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.12.1@sha256:93d5aaeda37d59e6c4325ff05030d7b48fabde6576478e3fdbfb9bb4a68ec4a1
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.10.20"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.12.1@sha256:646582b22bf41ad29dd7739b12aae77455ee5757b9ee087f2d45d684afef5fa1"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.9.1@sha256:baff611b975cb12307a163c0e547e648da211384eabdafd327707ff2ec31cc24"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
          - name: hubble-ui-nginx-conf
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
          - name: tmp-dir
            mountPath: /tmp
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.9.1@sha256:c4b86e0d7a38d52c6ea3d9d7b17809e5212efd97494e8bd37c8466ddd68d42d0"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
